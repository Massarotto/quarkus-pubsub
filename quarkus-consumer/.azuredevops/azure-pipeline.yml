trigger:
  - main

pool:
  name: 'self-hosted-pool'

variables:
  - group: GCP
  - name: GCP_PROJECT_ID
    value: 'study-464117'
  - name: GCP_REGION
    value: 'us-central1'
  - name: IMAGE_NAME
    value: 'consumer-job'
  - name: IMAGE_URI
    value: 'gcr.io/$(GCP_PROJECT_ID)/$(IMAGE_NAME)'

stages:
  - stage: BuildAndDeploy
    jobs:
      - job: Build
        displayName: 'Build and Deploy to Google Cloud'
        pool:
          name: 'self-hosted-pool'

        steps:
          # 1 Checkout do código
          - checkout: self

          # 2 Salvar chave JSON em um arquivo local
          - script: |
              echo '$(GCP_SA_KEY_JSON)' > gcp-key.json
            displayName: 'Write GCP Service Account JSON to File'

          # 3 Autenticar no GCP
          - script: |
              gcloud auth activate-service-account --key-file=gcp-key.json
              gcloud config set project $(GCP_PROJECT_ID)
              gcloud auth configure-docker
            displayName: 'Authenticate gcloud'

          # 4 Debug - listar arquivos
          - script: |
              echo "Verificando se o Dockerfile está presente..."
              ls -lah
            displayName: 'Listar arquivos do diretório'

          # 5 Buildar imagem com Cloud Build
          - script: |
              gcloud builds submit --tag $(IMAGE_URI) .
            displayName: 'Cloud Build: Submit Image'

          # 6 Deploy no Cloud Run Job
          - script: |
              echo "Tentando criar job (pode falhar se já existir)..."
              gcloud run jobs create $(IMAGE_NAME) \
                --image $(IMAGE_URI) \
                --region $(GCP_REGION) \
                --quiet || echo "Job já existe, atualizando..."
              gcloud run jobs update $(IMAGE_NAME) \
                --image $(IMAGE_URI) \
                --region $(GCP_REGION) \
                --quiet
            displayName: 'Deploy to Cloud Run Job'
